@{
    var forestryName = Model.Item1.FirstOrDefault().ForestryName;
    var forestryID = Model.Item1.FirstOrDefault().ForestryID;
    var subTitle = "Расчет возраста главной рубки";
    ViewData["Title"] = $"{forestryName} - {subTitle}";
    var p0 = "N0";
    var p1 = "N1";
    var p2 = "N2";
}
@model Tuple<List<SectionMainFellingAgeCalc>, List<SectionAgeGroup>>

<div class="page-content-center page-content-display">
    <h1><a asp-action="forestry" asp-route-id=@forestryID>@forestryName</a> - @subTitle</h1>
    @foreach (var forestrySection in Model.Item1.OrderBy(g => g.SectionName))
    {
        <h4>@forestrySection.SectionName</h4>
        <table class="table">
            <tr>
                <th rowspan="2"></th>
                <th colspan="8">Классы возраста</th>
                <th rowspan="2">Итого</th>
            </tr>
            <tr>
                <th>Ⅰ</th>
                <th>Ⅱ</th>
                <th>Ⅲ</th>
                <th>Ⅳ</th>
                <th>Ⅴ</th>
                <th>Ⅵ</th>
                <th>Ⅶ</th>
                <th>Ⅷ</th>
            </tr>
            <tr>
                <th>Площадь насаждений</th>
                @for (var i = 1; i <= 8; i++)
                {
                    var ageGroup = Model.Item2.FirstOrDefault(g => g.SectionID == forestrySection.SectionID && g.AgeClass == i);
                    <td class="@(forestrySection.MainFellingAgeClass == i ? "table-item-highlighted" : "") @(forestrySection.TargetClass == i ? "table-item-outlined" : "")">@Formatting.toFixed(ageGroup?.Area, p0)</td>
                }
                <td>@Formatting.toFixed(Model.Item2.Where(g => g.SectionID == forestrySection.SectionID).Sum(s => s.Area), p0)</td>
            </tr>
        </table>
        <div>
            Лесопокрытая площадь: @(Formatting.toFixed(forestrySection.Area, p0)).
            <br />
            @((forestrySection.TechnicalAge == null ? "Рекомендуемый возраст рубки: " : "Возраст технической спелости: ") + forestrySection.TargetAge + " / " + forestrySection.TargetClass) (может быть смещен на один класс).
            <br/>
            Количественная спелость: @forestrySection.RipeAge (минимальный допустимый возраст рубки).
        </div>
        <table class="table">
            <tr>
                <th>Возраст главной рубки</th>
                <th>
                    Идеальная площадь рубки, га
                    <br/>
                    (лесопокрытая площадь секции / класс возраста ркбки)
                </th>
                <th>
                    Фактическая площадь рубки, га
                    <br />
                    (лесопокрытая площадь спелых классов / класс возраста рубки)
                </th>
                <th>Разница площадей, га</th>
            </tr>
            @if (forestrySection.TargetClass > 1)
            {
                <tr class="@(forestrySection.MainFellingAgeClass == forestrySection.TargetClass - 1 ? "table-item-highlighted" : "") @(forestrySection.TargetClass == forestrySection.TargetClass - 1 ? "table-item-outlined" : "")">
                    <td class="@(forestrySection.LowerClassMainFellingAge < forestrySection.RipeAge ? "table-item-error" : "")">@Formatting.toFixed(forestrySection.LowerClassMainFellingAge, p0)<br />@Formatting.toFixed(forestrySection.TargetClass - 1, p0)</td>
                    <td>@Formatting.toFixed(forestrySection.LowerClassTargetArea, p2)</td>
                    <td>@Formatting.toFixed(forestrySection.LowerClassTargetArea + forestrySection.LowerClassAreaDiff, p2)</td>
                    <td>@Formatting.toFixed(forestrySection.LowerClassAreaDiff, p2)</td>
                </tr>
            }
            <tr class="@(forestrySection.MainFellingAgeClass == forestrySection.TargetClass ? "table-item-highlighted" : "") @(forestrySection.TargetClass == forestrySection.TargetClass ? "table-item-outlined" : "")">
                <td class="@(forestrySection.TargetClassMainFellingAge < forestrySection.RipeAge ? "table-item-error" : "")">@Formatting.toFixed(forestrySection.TargetClassMainFellingAge, p0)<br />@Formatting.toFixed(forestrySection.TargetClass, p0)</td>
                <td>@Formatting.toFixed(forestrySection.TargetClassTargetArea, p2)</td>
                <td>@Formatting.toFixed(forestrySection.TargetClassTargetArea + forestrySection.TargetClassAreaDiff, p2)</td>
                <td>@Formatting.toFixed(forestrySection.TargetClassAreaDiff, p2)</td>
            </tr>
            @if(forestrySection.TargetClass < 8)
            {
                <tr class="@(forestrySection.MainFellingAgeClass == forestrySection.TargetClass + 1 ? "table-item-highlighted" : "") @(forestrySection.TargetClass == forestrySection.TargetClass + 1 ? "table-item-outlined" : "")">
                    <td style="@(forestrySection.HigherClassMainFellingAge < forestrySection.RipeAge ? "background-color: red" : "")">@Formatting.toFixed(forestrySection.HigherClassMainFellingAge, p0)<br />@Formatting.toFixed(forestrySection.TargetClass + 1, p0)</td>
                    <td>@Formatting.toFixed(forestrySection.HigherClassTargetArea, p2)</td>
                    <td>@Formatting.toFixed(forestrySection.HigherClassTargetArea + forestrySection.HigherClassAreaDiff, p2)</td>
                    <td>@Formatting.toFixed(forestrySection.HigherClassAreaDiff, p2)</td>
                </tr>
            }
        </table>
        <div>
            @(forestrySection.MainFellingAge == null ? "Отсутствуют насаждения, подходящий для рубки." : $"Возраст главной рубки: {forestrySection.MainFellingAge} / {forestrySection.MainFellingAgeClass}")
        </div>
    }
</div>